set rdtrCache=$REDIR_HOST
set rdtrPortCmsd=$REDIR_CMSD_PORT
set rdtrGlobal=$ORIGIN_HOST
set rdtrGlobalPort=$ORIGIN_XRD_PORT
set cacheHttpPort=$CACHE_HTTP_PORT
set cacheLowWm=$LOW_WM
set cacheHiWm=$HI_WM
set cacheLogLevel=$CACHE_LOG_LEVEL
set cachePath=$CACHE_PATH
set cacheRam=$CACHE_RAM_GB
set cacheStreams=$STREAMS
set prefetch=$N_PREFETCH
set blkSize=$BLOCK_SIZE

all.manager $rdtrCache:$rdtrPortCmsd

if exec cmsd

all.role server
xrd.port 31113
# Export with stage option - this tells manager cmsd we can pull files from the origin
#
all.export / stage 

# The cmsd uses the standard oss plug-in to locate files in the cache.
# oss.localroot directive should be the same as for the server.
#

oss.localroot $cachePath

# Server?s xrootd configuration ? all PFC?s are virtual data servers
#
else

all.export / 
all.pidpath /var/run/xrootd

oss.localroot /data/ 
  

xrootd.trace info 
xrd.trace info 
acc.trace debug 
ofs.trace debug 
sec.trace debug 
  
xrd.port ${cacheHttpPort} 
xrd.protocol XrdHttp:${cacheHttpPort} libXrdHttp.so 
  
#http.trace 
# Uncomment the following line to get extensive debugging information 
http.trace all debug 
   
# Enable the SciTokens authorization library. 
ofs.authorize 
ofs.authlib libXrdAccSciTokens.so config=/etc/xrootd/scitokens.cfg 
  
# This particular authfile allows anonymous writes. 
acc.authdb /etc/xrootd/Auth-file-http

http.header2cgi Authorization authz 
  
# Boiler-plate HTTPS configuration 
http.cadir /etc/grid-security/certificates
http.cert /etc/grid-security/hostcert.pem
http.key /etc/grid-security/hostcert.key
  
http.listingdeny yes 
http.staticpreload http://static/robots.txt /etc/xrootd/robots.txt 

ofs.osslib   libXrdPss.so
pss.cachelib libXrdFileCache.so

pss.origin $rdtrGlobal:$rdtrGlobalPort

pfc.diskusage $cacheLowWm $cacheHiWm
pfc.ram       ${cacheRam}g

pfc.blocksize   $blkSize
pfc.prefetch    $prefetch

pss.setopt ParallelEvtLoop 10
pss.setopt RequestTimeout 25
pss.setopt ConnectTimeout 25
pss.setopt ConnectionRetry 2

fi